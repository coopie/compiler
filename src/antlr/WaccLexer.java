// Generated from ./WaccLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WaccLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMENT=1, INTEGER=2, PLUS=3, MINUS=4, NOT=5, LEN=6, ORD=7, CHR=8, MUL=9, 
		DIV=10, MOD=11, GT=12, GTE=13, LT=14, LTE=15, EQ=16, NEQ=17, AND=18, OR=19, 
		SEMICOLON=20, OPEN_PARENTHESES=21, CLOSE_PARENTHESES=22, COMMA=23, ASSIGN=24, 
		BEGIN=25, IS=26, END=27, SKIP=28, READ=29, FREE=30, RETURN=31, EXIT=32, 
		PRINT=33, PRINTLN=34, IF=35, THEN=36, ELSE=37, FI=38, WHILE=39, DO=40, 
		DONE=41, NEWPAIR=42, CALL=43, FST=44, SND=45, INT=46, BOOL=47, CHAR=48, 
		STRING=49, PAIR=50, TRUE=51, FALSE=52, NULL=53, IDENT=54, OPEN_SQ_PARENTHESES=55, 
		CLOSE_SQ_PARENTHESES=56, STRING_LTR=57, CHAR_LTR=58, WS=59;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'"
	};
	public static final String[] ruleNames = {
		"COMMENT", "INTEGER", "PLUS", "MINUS", "NOT", "LEN", "ORD", "CHR", "MUL", 
		"DIV", "MOD", "GT", "GTE", "LT", "LTE", "EQ", "NEQ", "AND", "OR", "SEMICOLON", 
		"OPEN_PARENTHESES", "CLOSE_PARENTHESES", "COMMA", "ASSIGN", "DIGIT", "BEGIN", 
		"IS", "END", "SKIP", "READ", "FREE", "RETURN", "EXIT", "PRINT", "PRINTLN", 
		"IF", "THEN", "ELSE", "FI", "WHILE", "DO", "DONE", "NEWPAIR", "CALL", 
		"FST", "SND", "INT", "BOOL", "CHAR", "STRING", "PAIR", "TRUE", "FALSE", 
		"NULL", "IDENT", "OPEN_SQ_PARENTHESES", "CLOSE_SQ_PARENTHESES", "STR_FRAG", 
		"CHR_FRAG", "STRING_LTR", "CHAR_LTR", "WS"
	};


	public WaccLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WaccLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2=\u018a\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\3\2\3\2\7\2\u0082\n\2\f\2\16\2\u0085\13\2\3\2\3\2\3\2\3\2"+
		"\3\3\5\3\u008c\n\3\3\3\6\3\u008f\n\3\r\3\16\3\u0090\3\4\3\4\3\5\3\5\3"+
		"\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3"+
		"\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21"+
		"\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\26\3\26"+
		"\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37"+
		"\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3"+
		"\"\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3&\3&\3&\3&\3&\3"+
		"\'\3\'\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*\3*\3+\3+\3+\3+\3+"+
		"\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3/\3/\3/\3/\3\60\3"+
		"\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\63\3"+
		"\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3"+
		"\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\38\38"+
		"\78\u0162\n8\f8\168\u0165\138\39\39\3:\3:\3;\3;\3;\5;\u016e\n;\3<\3<\3"+
		"<\5<\u0173\n<\3=\3=\7=\u0177\n=\f=\16=\u017a\13=\3=\3=\3>\3>\7>\u0180"+
		"\n>\f>\16>\u0183\13>\3>\3>\3?\3?\3?\3?\5\u0083\u0178\u0181\2@\3\3\5\4"+
		"\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\31\61\32\63\2\65\33\67\349\35;\36=\37? A!C"+
		"\"E#G$I%K&M\'O(Q)S*U+W,Y-[.]/_\60a\61c\62e\63g\64i\65k\66m\67o8q9s:u\2"+
		"w\2y;{<}=\3\2\6\4\2--//\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\u018e"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2"+
		"\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W"+
		"\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2"+
		"\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2"+
		"\2q\3\2\2\2\2s\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\3\177\3\2\2\2"+
		"\5\u008b\3\2\2\2\7\u0092\3\2\2\2\t\u0094\3\2\2\2\13\u0096\3\2\2\2\r\u0098"+
		"\3\2\2\2\17\u009c\3\2\2\2\21\u00a0\3\2\2\2\23\u00a4\3\2\2\2\25\u00a6\3"+
		"\2\2\2\27\u00a8\3\2\2\2\31\u00aa\3\2\2\2\33\u00ac\3\2\2\2\35\u00af\3\2"+
		"\2\2\37\u00b1\3\2\2\2!\u00b4\3\2\2\2#\u00b7\3\2\2\2%\u00ba\3\2\2\2\'\u00bd"+
		"\3\2\2\2)\u00c0\3\2\2\2+\u00c2\3\2\2\2-\u00c4\3\2\2\2/\u00c6\3\2\2\2\61"+
		"\u00c8\3\2\2\2\63\u00ca\3\2\2\2\65\u00cc\3\2\2\2\67\u00d2\3\2\2\29\u00d5"+
		"\3\2\2\2;\u00d9\3\2\2\2=\u00de\3\2\2\2?\u00e3\3\2\2\2A\u00e8\3\2\2\2C"+
		"\u00ef\3\2\2\2E\u00f4\3\2\2\2G\u00fa\3\2\2\2I\u0102\3\2\2\2K\u0105\3\2"+
		"\2\2M\u010a\3\2\2\2O\u010f\3\2\2\2Q\u0112\3\2\2\2S\u0118\3\2\2\2U\u011b"+
		"\3\2\2\2W\u0120\3\2\2\2Y\u0128\3\2\2\2[\u012d\3\2\2\2]\u0131\3\2\2\2_"+
		"\u0135\3\2\2\2a\u0139\3\2\2\2c\u013e\3\2\2\2e\u0143\3\2\2\2g\u014a\3\2"+
		"\2\2i\u014f\3\2\2\2k\u0154\3\2\2\2m\u015a\3\2\2\2o\u015f\3\2\2\2q\u0166"+
		"\3\2\2\2s\u0168\3\2\2\2u\u016d\3\2\2\2w\u0172\3\2\2\2y\u0174\3\2\2\2{"+
		"\u017d\3\2\2\2}\u0186\3\2\2\2\177\u0083\7%\2\2\u0080\u0082\13\2\2\2\u0081"+
		"\u0080\3\2\2\2\u0082\u0085\3\2\2\2\u0083\u0084\3\2\2\2\u0083\u0081\3\2"+
		"\2\2\u0084\u0086\3\2\2\2\u0085\u0083\3\2\2\2\u0086\u0087\7\f\2\2\u0087"+
		"\u0088\3\2\2\2\u0088\u0089\b\2\2\2\u0089\4\3\2\2\2\u008a\u008c\t\2\2\2"+
		"\u008b\u008a\3\2\2\2\u008b\u008c\3\2\2\2\u008c\u008e\3\2\2\2\u008d\u008f"+
		"\5\63\32\2\u008e\u008d\3\2\2\2\u008f\u0090\3\2\2\2\u0090\u008e\3\2\2\2"+
		"\u0090\u0091\3\2\2\2\u0091\6\3\2\2\2\u0092\u0093\7-\2\2\u0093\b\3\2\2"+
		"\2\u0094\u0095\7/\2\2\u0095\n\3\2\2\2\u0096\u0097\7#\2\2\u0097\f\3\2\2"+
		"\2\u0098\u0099\7n\2\2\u0099\u009a\7g\2\2\u009a\u009b\7p\2\2\u009b\16\3"+
		"\2\2\2\u009c\u009d\7q\2\2\u009d\u009e\7t\2\2\u009e\u009f\7f\2\2\u009f"+
		"\20\3\2\2\2\u00a0\u00a1\7e\2\2\u00a1\u00a2\7j\2\2\u00a2\u00a3\7t\2\2\u00a3"+
		"\22\3\2\2\2\u00a4\u00a5\7,\2\2\u00a5\24\3\2\2\2\u00a6\u00a7\7\61\2\2\u00a7"+
		"\26\3\2\2\2\u00a8\u00a9\7\'\2\2\u00a9\30\3\2\2\2\u00aa\u00ab\7@\2\2\u00ab"+
		"\32\3\2\2\2\u00ac\u00ad\7@\2\2\u00ad\u00ae\7?\2\2\u00ae\34\3\2\2\2\u00af"+
		"\u00b0\7>\2\2\u00b0\36\3\2\2\2\u00b1\u00b2\7>\2\2\u00b2\u00b3\7?\2\2\u00b3"+
		" \3\2\2\2\u00b4\u00b5\7?\2\2\u00b5\u00b6\7?\2\2\u00b6\"\3\2\2\2\u00b7"+
		"\u00b8\7#\2\2\u00b8\u00b9\7?\2\2\u00b9$\3\2\2\2\u00ba\u00bb\7(\2\2\u00bb"+
		"\u00bc\7(\2\2\u00bc&\3\2\2\2\u00bd\u00be\7~\2\2\u00be\u00bf\7~\2\2\u00bf"+
		"(\3\2\2\2\u00c0\u00c1\7=\2\2\u00c1*\3\2\2\2\u00c2\u00c3\7*\2\2\u00c3,"+
		"\3\2\2\2\u00c4\u00c5\7+\2\2\u00c5.\3\2\2\2\u00c6\u00c7\7.\2\2\u00c7\60"+
		"\3\2\2\2\u00c8\u00c9\7?\2\2\u00c9\62\3\2\2\2\u00ca\u00cb\4\62;\2\u00cb"+
		"\64\3\2\2\2\u00cc\u00cd\7d\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf\7i\2\2\u00cf"+
		"\u00d0\7k\2\2\u00d0\u00d1\7p\2\2\u00d1\66\3\2\2\2\u00d2\u00d3\7k\2\2\u00d3"+
		"\u00d4\7u\2\2\u00d48\3\2\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7\7p\2\2\u00d7"+
		"\u00d8\7f\2\2\u00d8:\3\2\2\2\u00d9\u00da\7u\2\2\u00da\u00db\7m\2\2\u00db"+
		"\u00dc\7k\2\2\u00dc\u00dd\7r\2\2\u00dd<\3\2\2\2\u00de\u00df\7t\2\2\u00df"+
		"\u00e0\7g\2\2\u00e0\u00e1\7c\2\2\u00e1\u00e2\7f\2\2\u00e2>\3\2\2\2\u00e3"+
		"\u00e4\7h\2\2\u00e4\u00e5\7t\2\2\u00e5\u00e6\7g\2\2\u00e6\u00e7\7g\2\2"+
		"\u00e7@\3\2\2\2\u00e8\u00e9\7t\2\2\u00e9\u00ea\7g\2\2\u00ea\u00eb\7v\2"+
		"\2\u00eb\u00ec\7w\2\2\u00ec\u00ed\7t\2\2\u00ed\u00ee\7p\2\2\u00eeB\3\2"+
		"\2\2\u00ef\u00f0\7g\2\2\u00f0\u00f1\7z\2\2\u00f1\u00f2\7k\2\2\u00f2\u00f3"+
		"\7v\2\2\u00f3D\3\2\2\2\u00f4\u00f5\7r\2\2\u00f5\u00f6\7t\2\2\u00f6\u00f7"+
		"\7k\2\2\u00f7\u00f8\7p\2\2\u00f8\u00f9\7v\2\2\u00f9F\3\2\2\2\u00fa\u00fb"+
		"\7r\2\2\u00fb\u00fc\7t\2\2\u00fc\u00fd\7k\2\2\u00fd\u00fe\7p\2\2\u00fe"+
		"\u00ff\7v\2\2\u00ff\u0100\7n\2\2\u0100\u0101\7p\2\2\u0101H\3\2\2\2\u0102"+
		"\u0103\7k\2\2\u0103\u0104\7h\2\2\u0104J\3\2\2\2\u0105\u0106\7v\2\2\u0106"+
		"\u0107\7j\2\2\u0107\u0108\7g\2\2\u0108\u0109\7p\2\2\u0109L\3\2\2\2\u010a"+
		"\u010b\7g\2\2\u010b\u010c\7n\2\2\u010c\u010d\7u\2\2\u010d\u010e\7g\2\2"+
		"\u010eN\3\2\2\2\u010f\u0110\7h\2\2\u0110\u0111\7k\2\2\u0111P\3\2\2\2\u0112"+
		"\u0113\7y\2\2\u0113\u0114\7j\2\2\u0114\u0115\7k\2\2\u0115\u0116\7n\2\2"+
		"\u0116\u0117\7g\2\2\u0117R\3\2\2\2\u0118\u0119\7f\2\2\u0119\u011a\7q\2"+
		"\2\u011aT\3\2\2\2\u011b\u011c\7f\2\2\u011c\u011d\7q\2\2\u011d\u011e\7"+
		"p\2\2\u011e\u011f\7g\2\2\u011fV\3\2\2\2\u0120\u0121\7p\2\2\u0121\u0122"+
		"\7g\2\2\u0122\u0123\7y\2\2\u0123\u0124\7r\2\2\u0124\u0125\7c\2\2\u0125"+
		"\u0126\7k\2\2\u0126\u0127\7t\2\2\u0127X\3\2\2\2\u0128\u0129\7e\2\2\u0129"+
		"\u012a\7c\2\2\u012a\u012b\7n\2\2\u012b\u012c\7n\2\2\u012cZ\3\2\2\2\u012d"+
		"\u012e\7h\2\2\u012e\u012f\7u\2\2\u012f\u0130\7v\2\2\u0130\\\3\2\2\2\u0131"+
		"\u0132\7u\2\2\u0132\u0133\7p\2\2\u0133\u0134\7f\2\2\u0134^\3\2\2\2\u0135"+
		"\u0136\7k\2\2\u0136\u0137\7p\2\2\u0137\u0138\7v\2\2\u0138`\3\2\2\2\u0139"+
		"\u013a\7d\2\2\u013a\u013b\7q\2\2\u013b\u013c\7q\2\2\u013c\u013d\7n\2\2"+
		"\u013db\3\2\2\2\u013e\u013f\7e\2\2\u013f\u0140\7j\2\2\u0140\u0141\7c\2"+
		"\2\u0141\u0142\7t\2\2\u0142d\3\2\2\2\u0143\u0144\7u\2\2\u0144\u0145\7"+
		"v\2\2\u0145\u0146\7t\2\2\u0146\u0147\7k\2\2\u0147\u0148\7p\2\2\u0148\u0149"+
		"\7i\2\2\u0149f\3\2\2\2\u014a\u014b\7r\2\2\u014b\u014c\7c\2\2\u014c\u014d"+
		"\7k\2\2\u014d\u014e\7t\2\2\u014eh\3\2\2\2\u014f\u0150\7v\2\2\u0150\u0151"+
		"\7t\2\2\u0151\u0152\7w\2\2\u0152\u0153\7g\2\2\u0153j\3\2\2\2\u0154\u0155"+
		"\7h\2\2\u0155\u0156\7c\2\2\u0156\u0157\7n\2\2\u0157\u0158\7u\2\2\u0158"+
		"\u0159\7g\2\2\u0159l\3\2\2\2\u015a\u015b\7p\2\2\u015b\u015c\7w\2\2\u015c"+
		"\u015d\7n\2\2\u015d\u015e\7n\2\2\u015en\3\2\2\2\u015f\u0163\t\3\2\2\u0160"+
		"\u0162\t\4\2\2\u0161\u0160\3\2\2\2\u0162\u0165\3\2\2\2\u0163\u0161\3\2"+
		"\2\2\u0163\u0164\3\2\2\2\u0164p\3\2\2\2\u0165\u0163\3\2\2\2\u0166\u0167"+
		"\7]\2\2\u0167r\3\2\2\2\u0168\u0169\7_\2\2\u0169t\3\2\2\2\u016a\u016b\7"+
		"^\2\2\u016b\u016e\7$\2\2\u016c\u016e\13\2\2\2\u016d\u016a\3\2\2\2\u016d"+
		"\u016c\3\2\2\2\u016ev\3\2\2\2\u016f\u0170\7^\2\2\u0170\u0173\7)\2\2\u0171"+
		"\u0173\13\2\2\2\u0172\u016f\3\2\2\2\u0172\u0171\3\2\2\2\u0173x\3\2\2\2"+
		"\u0174\u0178\7$\2\2\u0175\u0177\5u;\2\u0176\u0175\3\2\2\2\u0177\u017a"+
		"\3\2\2\2\u0178\u0179\3\2\2\2\u0178\u0176\3\2\2\2\u0179\u017b\3\2\2\2\u017a"+
		"\u0178\3\2\2\2\u017b\u017c\7$\2\2\u017cz\3\2\2\2\u017d\u0181\7)\2\2\u017e"+
		"\u0180\5w<\2\u017f\u017e\3\2\2\2\u0180\u0183\3\2\2\2\u0181\u0182\3\2\2"+
		"\2\u0181\u017f\3\2\2\2\u0182\u0184\3\2\2\2\u0183\u0181\3\2\2\2\u0184\u0185"+
		"\7)\2\2\u0185|\3\2\2\2\u0186\u0187\t\5\2\2\u0187\u0188\3\2\2\2\u0188\u0189"+
		"\b?\2\2\u0189~\3\2\2\2\13\2\u0083\u008b\u0090\u0163\u016d\u0172\u0178"+
		"\u0181\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}