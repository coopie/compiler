// Generated from ./WaccLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WaccLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMENT=1, INTEGER=2, PLUS=3, MINUS=4, NOT=5, LEN=6, ORD=7, CHR=8, MUL=9, 
		DIV=10, MOD=11, GT=12, GTE=13, LT=14, LTE=15, EQ=16, NEQ=17, AND=18, OR=19, 
		SEMICOLON=20, OPEN_PARENTHESES=21, CLOSE_PARENTHESES=22, COMMA=23, ASSIGN=24, 
		BEGIN=25, IS=26, END=27, SKIP=28, READ=29, FREE=30, RETURN=31, EXIT=32, 
		PRINT=33, PRINTLN=34, IF=35, THEN=36, ELSE=37, FI=38, WHILE=39, DO=40, 
		DONE=41, NEWPAIR=42, CALL=43, MAP=44, FST=45, SND=46, INT=47, BOOL=48, 
		CHAR=49, STRING=50, PAIR=51, TRUE=52, FALSE=53, NULL=54, IDENT=55, OPEN_SQ_PARENTHESES=56, 
		CLOSE_SQ_PARENTHESES=57, STRING_LTR=58, CHAR_LTR=59, WS=60;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'"
	};
	public static final String[] ruleNames = {
		"COMMENT", "INTEGER", "PLUS", "MINUS", "NOT", "LEN", "ORD", "CHR", "MUL", 
		"DIV", "MOD", "GT", "GTE", "LT", "LTE", "EQ", "NEQ", "AND", "OR", "SEMICOLON", 
		"OPEN_PARENTHESES", "CLOSE_PARENTHESES", "COMMA", "ASSIGN", "DIGIT", "BEGIN", 
		"IS", "END", "SKIP", "READ", "FREE", "RETURN", "EXIT", "PRINT", "PRINTLN", 
		"IF", "THEN", "ELSE", "FI", "WHILE", "DO", "DONE", "NEWPAIR", "CALL", 
		"MAP", "FST", "SND", "INT", "BOOL", "CHAR", "STRING", "PAIR", "TRUE", 
		"FALSE", "NULL", "IDENT", "OPEN_SQ_PARENTHESES", "CLOSE_SQ_PARENTHESES", 
		"STR_FRAG", "CHR_FRAG", "STRING_LTR", "CHAR_LTR", "WS"
	};


	public WaccLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WaccLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2>\u0191\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\3\2\3\2\7\2\u0084\n\2\f\2\16\2\u0087\13\2\3\2\3\2\3"+
		"\2\3\2\3\3\5\3\u008e\n\3\3\3\6\3\u0091\n\3\r\3\16\3\u0092\3\4\3\4\3\5"+
		"\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3"+
		"\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3\21"+
		"\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\26"+
		"\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33"+
		"\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37"+
		"\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3"+
		"\"\3\"\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3&\3&\3&\3&"+
		"\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*\3*\3+\3+\3+\3"+
		"+\3+\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3"+
		"/\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\63"+
		"\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\65"+
		"\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\3\67\38\3"+
		"8\38\38\38\39\39\79\u0169\n9\f9\169\u016c\139\3:\3:\3;\3;\3<\3<\3<\5<"+
		"\u0175\n<\3=\3=\3=\5=\u017a\n=\3>\3>\7>\u017e\n>\f>\16>\u0181\13>\3>\3"+
		">\3?\3?\7?\u0187\n?\f?\16?\u018a\13?\3?\3?\3@\3@\3@\3@\5\u0085\u017f\u0188"+
		"\2A\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\2\65\33\67\349\35"+
		";\36=\37? A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-[.]/_\60a\61c\62e\63g\64i\65k\66"+
		"m\67o8q9s:u;w\2y\2{<}=\177>\3\2\6\4\2--//\5\2C\\aac|\6\2\62;C\\aac|\5"+
		"\2\13\f\17\17\"\"\u0195\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2"+
		"\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2"+
		"\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2{\3\2\2\2\2}"+
		"\3\2\2\2\2\177\3\2\2\2\3\u0081\3\2\2\2\5\u008d\3\2\2\2\7\u0094\3\2\2\2"+
		"\t\u0096\3\2\2\2\13\u0098\3\2\2\2\r\u009a\3\2\2\2\17\u009e\3\2\2\2\21"+
		"\u00a2\3\2\2\2\23\u00a6\3\2\2\2\25\u00a8\3\2\2\2\27\u00aa\3\2\2\2\31\u00ac"+
		"\3\2\2\2\33\u00ae\3\2\2\2\35\u00b1\3\2\2\2\37\u00b3\3\2\2\2!\u00b6\3\2"+
		"\2\2#\u00b9\3\2\2\2%\u00bc\3\2\2\2\'\u00bf\3\2\2\2)\u00c2\3\2\2\2+\u00c4"+
		"\3\2\2\2-\u00c6\3\2\2\2/\u00c8\3\2\2\2\61\u00ca\3\2\2\2\63\u00cc\3\2\2"+
		"\2\65\u00ce\3\2\2\2\67\u00d4\3\2\2\29\u00d7\3\2\2\2;\u00db\3\2\2\2=\u00e0"+
		"\3\2\2\2?\u00e5\3\2\2\2A\u00ea\3\2\2\2C\u00f1\3\2\2\2E\u00f6\3\2\2\2G"+
		"\u00fc\3\2\2\2I\u0104\3\2\2\2K\u0107\3\2\2\2M\u010c\3\2\2\2O\u0111\3\2"+
		"\2\2Q\u0114\3\2\2\2S\u011a\3\2\2\2U\u011d\3\2\2\2W\u0122\3\2\2\2Y\u012a"+
		"\3\2\2\2[\u012f\3\2\2\2]\u0134\3\2\2\2_\u0138\3\2\2\2a\u013c\3\2\2\2c"+
		"\u0140\3\2\2\2e\u0145\3\2\2\2g\u014a\3\2\2\2i\u0151\3\2\2\2k\u0156\3\2"+
		"\2\2m\u015b\3\2\2\2o\u0161\3\2\2\2q\u0166\3\2\2\2s\u016d\3\2\2\2u\u016f"+
		"\3\2\2\2w\u0174\3\2\2\2y\u0179\3\2\2\2{\u017b\3\2\2\2}\u0184\3\2\2\2\177"+
		"\u018d\3\2\2\2\u0081\u0085\7%\2\2\u0082\u0084\13\2\2\2\u0083\u0082\3\2"+
		"\2\2\u0084\u0087\3\2\2\2\u0085\u0086\3\2\2\2\u0085\u0083\3\2\2\2\u0086"+
		"\u0088\3\2\2\2\u0087\u0085\3\2\2\2\u0088\u0089\7\f\2\2\u0089\u008a\3\2"+
		"\2\2\u008a\u008b\b\2\2\2\u008b\4\3\2\2\2\u008c\u008e\t\2\2\2\u008d\u008c"+
		"\3\2\2\2\u008d\u008e\3\2\2\2\u008e\u0090\3\2\2\2\u008f\u0091\5\63\32\2"+
		"\u0090\u008f\3\2\2\2\u0091\u0092\3\2\2\2\u0092\u0090\3\2\2\2\u0092\u0093"+
		"\3\2\2\2\u0093\6\3\2\2\2\u0094\u0095\7-\2\2\u0095\b\3\2\2\2\u0096\u0097"+
		"\7/\2\2\u0097\n\3\2\2\2\u0098\u0099\7#\2\2\u0099\f\3\2\2\2\u009a\u009b"+
		"\7n\2\2\u009b\u009c\7g\2\2\u009c\u009d\7p\2\2\u009d\16\3\2\2\2\u009e\u009f"+
		"\7q\2\2\u009f\u00a0\7t\2\2\u00a0\u00a1\7f\2\2\u00a1\20\3\2\2\2\u00a2\u00a3"+
		"\7e\2\2\u00a3\u00a4\7j\2\2\u00a4\u00a5\7t\2\2\u00a5\22\3\2\2\2\u00a6\u00a7"+
		"\7,\2\2\u00a7\24\3\2\2\2\u00a8\u00a9\7\61\2\2\u00a9\26\3\2\2\2\u00aa\u00ab"+
		"\7\'\2\2\u00ab\30\3\2\2\2\u00ac\u00ad\7@\2\2\u00ad\32\3\2\2\2\u00ae\u00af"+
		"\7@\2\2\u00af\u00b0\7?\2\2\u00b0\34\3\2\2\2\u00b1\u00b2\7>\2\2\u00b2\36"+
		"\3\2\2\2\u00b3\u00b4\7>\2\2\u00b4\u00b5\7?\2\2\u00b5 \3\2\2\2\u00b6\u00b7"+
		"\7?\2\2\u00b7\u00b8\7?\2\2\u00b8\"\3\2\2\2\u00b9\u00ba\7#\2\2\u00ba\u00bb"+
		"\7?\2\2\u00bb$\3\2\2\2\u00bc\u00bd\7(\2\2\u00bd\u00be\7(\2\2\u00be&\3"+
		"\2\2\2\u00bf\u00c0\7~\2\2\u00c0\u00c1\7~\2\2\u00c1(\3\2\2\2\u00c2\u00c3"+
		"\7=\2\2\u00c3*\3\2\2\2\u00c4\u00c5\7*\2\2\u00c5,\3\2\2\2\u00c6\u00c7\7"+
		"+\2\2\u00c7.\3\2\2\2\u00c8\u00c9\7.\2\2\u00c9\60\3\2\2\2\u00ca\u00cb\7"+
		"?\2\2\u00cb\62\3\2\2\2\u00cc\u00cd\4\62;\2\u00cd\64\3\2\2\2\u00ce\u00cf"+
		"\7d\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1\7i\2\2\u00d1\u00d2\7k\2\2\u00d2"+
		"\u00d3\7p\2\2\u00d3\66\3\2\2\2\u00d4\u00d5\7k\2\2\u00d5\u00d6\7u\2\2\u00d6"+
		"8\3\2\2\2\u00d7\u00d8\7g\2\2\u00d8\u00d9\7p\2\2\u00d9\u00da\7f\2\2\u00da"+
		":\3\2\2\2\u00db\u00dc\7u\2\2\u00dc\u00dd\7m\2\2\u00dd\u00de\7k\2\2\u00de"+
		"\u00df\7r\2\2\u00df<\3\2\2\2\u00e0\u00e1\7t\2\2\u00e1\u00e2\7g\2\2\u00e2"+
		"\u00e3\7c\2\2\u00e3\u00e4\7f\2\2\u00e4>\3\2\2\2\u00e5\u00e6\7h\2\2\u00e6"+
		"\u00e7\7t\2\2\u00e7\u00e8\7g\2\2\u00e8\u00e9\7g\2\2\u00e9@\3\2\2\2\u00ea"+
		"\u00eb\7t\2\2\u00eb\u00ec\7g\2\2\u00ec\u00ed\7v\2\2\u00ed\u00ee\7w\2\2"+
		"\u00ee\u00ef\7t\2\2\u00ef\u00f0\7p\2\2\u00f0B\3\2\2\2\u00f1\u00f2\7g\2"+
		"\2\u00f2\u00f3\7z\2\2\u00f3\u00f4\7k\2\2\u00f4\u00f5\7v\2\2\u00f5D\3\2"+
		"\2\2\u00f6\u00f7\7r\2\2\u00f7\u00f8\7t\2\2\u00f8\u00f9\7k\2\2\u00f9\u00fa"+
		"\7p\2\2\u00fa\u00fb\7v\2\2\u00fbF\3\2\2\2\u00fc\u00fd\7r\2\2\u00fd\u00fe"+
		"\7t\2\2\u00fe\u00ff\7k\2\2\u00ff\u0100\7p\2\2\u0100\u0101\7v\2\2\u0101"+
		"\u0102\7n\2\2\u0102\u0103\7p\2\2\u0103H\3\2\2\2\u0104\u0105\7k\2\2\u0105"+
		"\u0106\7h\2\2\u0106J\3\2\2\2\u0107\u0108\7v\2\2\u0108\u0109\7j\2\2\u0109"+
		"\u010a\7g\2\2\u010a\u010b\7p\2\2\u010bL\3\2\2\2\u010c\u010d\7g\2\2\u010d"+
		"\u010e\7n\2\2\u010e\u010f\7u\2\2\u010f\u0110\7g\2\2\u0110N\3\2\2\2\u0111"+
		"\u0112\7h\2\2\u0112\u0113\7k\2\2\u0113P\3\2\2\2\u0114\u0115\7y\2\2\u0115"+
		"\u0116\7j\2\2\u0116\u0117\7k\2\2\u0117\u0118\7n\2\2\u0118\u0119\7g\2\2"+
		"\u0119R\3\2\2\2\u011a\u011b\7f\2\2\u011b\u011c\7q\2\2\u011cT\3\2\2\2\u011d"+
		"\u011e\7f\2\2\u011e\u011f\7q\2\2\u011f\u0120\7p\2\2\u0120\u0121\7g\2\2"+
		"\u0121V\3\2\2\2\u0122\u0123\7p\2\2\u0123\u0124\7g\2\2\u0124\u0125\7y\2"+
		"\2\u0125\u0126\7r\2\2\u0126\u0127\7c\2\2\u0127\u0128\7k\2\2\u0128\u0129"+
		"\7t\2\2\u0129X\3\2\2\2\u012a\u012b\7e\2\2\u012b\u012c\7c\2\2\u012c\u012d"+
		"\7n\2\2\u012d\u012e\7n\2\2\u012eZ\3\2\2\2\u012f\u0130\7\60\2\2\u0130\u0131"+
		"\7o\2\2\u0131\u0132\7c\2\2\u0132\u0133\7r\2\2\u0133\\\3\2\2\2\u0134\u0135"+
		"\7h\2\2\u0135\u0136\7u\2\2\u0136\u0137\7v\2\2\u0137^\3\2\2\2\u0138\u0139"+
		"\7u\2\2\u0139\u013a\7p\2\2\u013a\u013b\7f\2\2\u013b`\3\2\2\2\u013c\u013d"+
		"\7k\2\2\u013d\u013e\7p\2\2\u013e\u013f\7v\2\2\u013fb\3\2\2\2\u0140\u0141"+
		"\7d\2\2\u0141\u0142\7q\2\2\u0142\u0143\7q\2\2\u0143\u0144\7n\2\2\u0144"+
		"d\3\2\2\2\u0145\u0146\7e\2\2\u0146\u0147\7j\2\2\u0147\u0148\7c\2\2\u0148"+
		"\u0149\7t\2\2\u0149f\3\2\2\2\u014a\u014b\7u\2\2\u014b\u014c\7v\2\2\u014c"+
		"\u014d\7t\2\2\u014d\u014e\7k\2\2\u014e\u014f\7p\2\2\u014f\u0150\7i\2\2"+
		"\u0150h\3\2\2\2\u0151\u0152\7r\2\2\u0152\u0153\7c\2\2\u0153\u0154\7k\2"+
		"\2\u0154\u0155\7t\2\2\u0155j\3\2\2\2\u0156\u0157\7v\2\2\u0157\u0158\7"+
		"t\2\2\u0158\u0159\7w\2\2\u0159\u015a\7g\2\2\u015al\3\2\2\2\u015b\u015c"+
		"\7h\2\2\u015c\u015d\7c\2\2\u015d\u015e\7n\2\2\u015e\u015f\7u\2\2\u015f"+
		"\u0160\7g\2\2\u0160n\3\2\2\2\u0161\u0162\7p\2\2\u0162\u0163\7w\2\2\u0163"+
		"\u0164\7n\2\2\u0164\u0165\7n\2\2\u0165p\3\2\2\2\u0166\u016a\t\3\2\2\u0167"+
		"\u0169\t\4\2\2\u0168\u0167\3\2\2\2\u0169\u016c\3\2\2\2\u016a\u0168\3\2"+
		"\2\2\u016a\u016b\3\2\2\2\u016br\3\2\2\2\u016c\u016a\3\2\2\2\u016d\u016e"+
		"\7]\2\2\u016et\3\2\2\2\u016f\u0170\7_\2\2\u0170v\3\2\2\2\u0171\u0172\7"+
		"^\2\2\u0172\u0175\7$\2\2\u0173\u0175\13\2\2\2\u0174\u0171\3\2\2\2\u0174"+
		"\u0173\3\2\2\2\u0175x\3\2\2\2\u0176\u0177\7^\2\2\u0177\u017a\7)\2\2\u0178"+
		"\u017a\13\2\2\2\u0179\u0176\3\2\2\2\u0179\u0178\3\2\2\2\u017az\3\2\2\2"+
		"\u017b\u017f\7$\2\2\u017c\u017e\5w<\2\u017d\u017c\3\2\2\2\u017e\u0181"+
		"\3\2\2\2\u017f\u0180\3\2\2\2\u017f\u017d\3\2\2\2\u0180\u0182\3\2\2\2\u0181"+
		"\u017f\3\2\2\2\u0182\u0183\7$\2\2\u0183|\3\2\2\2\u0184\u0188\7)\2\2\u0185"+
		"\u0187\5y=\2\u0186\u0185\3\2\2\2\u0187\u018a\3\2\2\2\u0188\u0189\3\2\2"+
		"\2\u0188\u0186\3\2\2\2\u0189\u018b\3\2\2\2\u018a\u0188\3\2\2\2\u018b\u018c"+
		"\7)\2\2\u018c~\3\2\2\2\u018d\u018e\t\5\2\2\u018e\u018f\3\2\2\2\u018f\u0190"+
		"\b@\2\2\u0190\u0080\3\2\2\2\13\2\u0085\u008d\u0092\u016a\u0174\u0179\u017f"+
		"\u0188\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}